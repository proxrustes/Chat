@using Chat_FrontEnd.ObjectModel
@model UserModel
<style>
body, html {
    height: 100%;
    font-family: Monospace;
    background: white;

}

ul{
  padding-left: 5px;
  margin-top: 0px;
}

.out-wrapper > div{
  color: white;
}

.btn-group{
    height:40px;
}
.out-wrapper{
  display: grid;
  height: 100%;
  grid-template-columns: 25% auto;
  color: white;
}

.side-bar {
  display: grid;
  grid-gap: 3px;
}

.header{
  position: relative;
  display: flex;
  justify-content: space-between;
  width:  100%;
  height:  54px;
  padding: 5px;
  align-items: center;
  background: white;
  font-size: 14px;
  box-shadow: 1px 1px 5px black;
}

.logo{
        color:black;
        font-size:25px;
        text-align:left;
        float:left;
        margin:0px;
        line-height:50px;
        padding-left:9px;
      }

      .message:hover{
          box-shadow: 1px 1px 5px black;
      }

input {
  border: none;
  outline: none;
  border-radius: 3px;
  padding: 0px;
  vertical-align: middle;
  width: calc(100% - 100px);
  height: 40px;
  background: black;
  font-family: monospace;
  color: white;


 text-align: center;
}

#submit {
  margin: 0 auto;
  height: 40px;
  width: 40px;
  left:  -15px;
  padding: 0px;
  border-radius: 8px;
  position: relative;
  vertical-align: middle;
  background: whitesmoke;
  cursor: pointer;
}

#send:before {
  content: "Q";
  font-family: monospace;
  color: black;
  font-size: 20px;
  font-weight: bold;
}

#send:hover{
  background-color: darkgoldenrod;
}


.fa-solid{

  vertical-align: middle;
  padding: 0px;
  border-radius: 8px;
  position: relative;
  cursor: pointer;
}

.dropdown {
  position: relative;
  display: inline;
  width: 200px;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #3b86ff;
  z-index: 1;
  min-width: 150px;
}

.dropdown-content a {
  padding: 14px 16px;
  display: block;
}

.dropdown-content a:hover {
  background-color: #ddd;
}

.show {
  display: block;
}
.nav-links{
  vertical-align: middle;
  margin-bottom: 0px;
}

.menu-item {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 5px;
  }

.left{
  display: flex;
  align-items: center;
}
.right{
  display: flex;
  align-items: center;
}


.left > img
{
  display: inline-block;
  position: relative;
  vertical-align: middle;

  width: 30px;
  height: 30px;
}
.menu-item > a {
  color: red;
  vertical-align: middle;
}

.right > h5 {
    position: relative;
    display: inline;
    vertical-align: middle;
    color: black;
  }

.left > h4 {
    left:5px;
    max-width: 150px;
    overflow: hidden;
    text-overflow: ellipsis;
    vertical-align: middle;
    position: relative;
    display: inline-block;
    color: black;
  }

::selection{
color: darkgoldenrod;
background-color: darkred;
  }


p{
    color:black;
}
.message{
    colour:blue;
}
</style>
<body>


 <div class="header">
      <h1 class="logo">Hello @Model.userName!</h1>
       <h3 id="chat_name">name</h3>
       
  </div>

  <div class="out-wrapper">  

  <div class="side-bar" style="background-color:white; margin:5px">
      <div class="btn-group" id="pages_btn">
            </div>
            <div id="message_menu"></div>
      <div id="all_chats">
            <ul>
             
            </ul>
            </div>

            
                
               

                <div style="display: flex; align-items: center; justify-content: center;">

                 
                   
              </div>
            </div>


<div>
    
   <div id="all_messages" style="background-color:yellow"></div>

  </div>
     
</div>

<div>

   
          
<input type="text" id="message_body">
       <button onclick="sendOnClick()">Send</button>
</div>

<p class=@Model.userName id="username" style="display:none"></p>

       <p id="pages_count" style="display:none"></p>
        <p id="current_page" style="display:none"></p>
         <p id="current_message" style="display:none"></p>
        <h3 id="chat_id"style="display:none">id</h3>

           <script type="text/javascript">
               
               var intervalId = window.setInterval(function(){
                    LoadPages();
                    pn = document.getElementById("current_page");
                    console.log("current page: " + pn.innerText)
                    LoadMessages(pn.innerText);}, 5000);

                function sendOnClick(){

                   let chatId = document.getElementById('chat_id');
                   let message_body = document.getElementById('message_body');

                   let xhr = new XMLHttpRequest();
                    xhr.open("POST", "https://localhost:7069/api/messages");

                    xhr.setRequestHeader("Accept", "application/json");
                    xhr.setRequestHeader("Content-Type", "application/json");

                    xhr.onload = () => console.log(xhr.responseText);
                    let username = document.getElementById('username').className;
                    let data = {"chatId": parseInt(chatId.innerText),"userName": username, "messageBody": message_body.value, "deletedForSelf": false, "messageDate":new Date().toJSON()};
                    console.log(JSON.stringify(data));
                    xhr.setRequestHeader("Access-Control-Allow-Origin", "GET, POST, PUT");
                    xhr.send(JSON.stringify(data));
                    LoadPages();
                    pn = document.getElementById("pages_count");
                    console.log("page number (pn) "  + pn.innerText);
                    message_body.value = '';
               }

              
        fetch("https://localhost:7069/api/chats")
        .then(response => 
        {
            return response.json();
        })
        .then(data => 
        {
            const chats = data;
            console.log(chats);
        
           ul =  document.getElementById('all_chats', {mode: 'no-cors'});
           chats.forEach(item => 
            {
            let li = document.createElement('p');
            ul.appendChild(li);
           
            li.innerHTML += item.chatName;
            li.addEventListener('click', function handleClick(event) 
            {
             
              console.log('chat selected 🎉🎉🎉', li.innerText);
              selected=document.getElementById('chat_name');
              selected.innerHTML = li.innerText;
              selected=document.getElementById('chat_id');
              selected.innerHTML = parseInt(item.id);
              selected=document.getElementById('current_page');
              selected.innerHTML = 0;
              LoadMessages(0);
              LoadPages();

            });
                    }
                );
            });
                   

            function LoadPages()
            {
             var pages_number =  document.getElementById('chat_id');
             fetch("https://localhost:7069/api/messages/pages/" + pages_number.innerText)
            .then(response => 
            {return response.json(); } )
            .then(data_pn => 
            {const pn = data_pn; console.log("Load Pages pn: " + pn); 
               ul =  document.getElementById('pages_count');
               ul.innerHTML = pn;

                var btns =  document.getElementById('pages_btn');
                btns.innerHTML='';
               for(let i=0; i<pn;i++)
               {
                   button_page = document.createElement("button");
                   button_page.innerHTML = i;
                   button_page.addEventListener('click', function handleClick(event) 
                     {LoadMessages(pn - i - 1);
                      selected=document.getElementById('current_page');
                   selected.innerHTML = pn - i - 1;})
                  
                   btns.appendChild(button_page);
               }
               

                })
            
            }
        
           function LoadMessages(page)
           {
               var message_menu = document.getElementById('message_menu');
                    var ddlist = document.createElement('div');
                    ddlist.classList.add("message-menu-content");

                    var reply = document.createElement('p');
                    reply.innerText = "reply to group";

                    var reply_pr = document.createElement('p');
                    reply_pr.innerText = "reply to pm";

                    var edit = document.createElement('p');
                    edit.innerText = "edit";

                    var delete_all = document.createElement('p');
                    delete_all.innerText = "delete";
                    delete_all.innerText = "delete";
                    
                    var delete_self = document.createElement('p');
                    delete_self.innerText = "delete for sef";
                    
                    ddlist.appendChild(reply);
                    ddlist.appendChild(reply_pr);
                    ddlist.appendChild(edit);
                    ddlist.appendChild(delete_all);
                    ddlist.appendChild(delete_self);
                    
                    message_menu.innerHTML="";
                    message_menu.appendChild(ddlist);
    
                var number =  document.getElementById('chat_id');
                
                fetch("https://localhost:7069/api/messages/" + number.textContent + "/" + page)
                .then(response => {return response.json(); } )
                .then(data => 
                {const messages = data; 
                        let username = document.getElementById('username').className;
    
                        ul =  document.getElementById('all_messages'); 
                        ul.innerHTML='';
    
                        for (let i = 0; i < messages.length; i++) 
                           {
                            var li = document.createElement('p');
                            ul.appendChild(li);
                            li.id=i;
                            li.classList.add("message");
                            li.innerHTML = messages[i].messageBody + " from " + messages[i].userName + " at " + messages[i].messageDate;
                            //li.addEventListener('click', function handleClick(event) 
                            //                        {console.log('message selected 🎉🎉🎉', li.id);} );
                            }
                }
              
         );
            const wrapper = document.getElementById('all_messages');

            wrapper.addEventListener('click', (event) => {
              const isButton = event.target.nodeName === 'P';
              if (!isButton) {
                return;
              }
              var current_message = document.getElementById('current_message');
               current_message.InnterHTML = event.target.id;
               console.log(current_message.InnterHTML)
            })
              
       }

</script>
</body>